Subject: [PATCH] 0
---
Index: src/main/java/AppConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/AppConfig.java b/src/main/java/AppConfig.java
--- a/src/main/java/AppConfig.java	(revision 886709bd9f9952cfb3ecac6f59ca708921f649b4)
+++ b/src/main/java/AppConfig.java	(date 1740909945768)
@@ -11,4 +11,9 @@
         helloWorld.setMessage("Hello World!");
         return helloWorld;
     }
+    @Bean
+    @Scope("prototype")
+    public Cat cat() {
+        return new Cat();
+    }
 }
\ No newline at end of file
Index: src/main/java/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/App.java b/src/main/java/App.java
--- a/src/main/java/App.java	(revision 886709bd9f9952cfb3ecac6f59ca708921f649b4)
+++ b/src/main/java/App.java	(date 1740910318128)
@@ -7,6 +7,13 @@
                 new AnnotationConfigApplicationContext(AppConfig.class);
         HelloWorld bean =
                 (HelloWorld) applicationContext.getBean("helloworld");
-        System.out.println(bean.getMessage());
+
+        HelloWorld bean2 =
+                (HelloWorld) applicationContext.getBean("helloworld");
+        System.out.println(bean.getMessage() == bean2.getMessage());
+        Cat cat1 = applicationContext.getBean("cat", Cat.class);
+        Cat cat2 = applicationContext.getBean("cat", Cat.class);
+
+        System.out.println(cat1 == cat2);
     }
-}
\ No newline at end of file
+}
Index: src/test/java/AppTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/AppTest.java b/src/test/java/AppTest.java
--- a/src/test/java/AppTest.java	(revision 886709bd9f9952cfb3ecac6f59ca708921f649b4)
+++ b/src/test/java/AppTest.java	(date 1740909825834)
@@ -1,30 +1,29 @@
-//import org.junit.Assert;
-//import org.junit.Test;
-//import org.junit.runner.RunWith;
-//import org.springframework.beans.factory.annotation.Autowired;
-//import org.springframework.context.ApplicationContext;
-//import org.springframework.test.context.ContextConfiguration;
-//import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
-//
-//
-//@RunWith(SpringJUnit4ClassRunner.class)
-//@ContextConfiguration(classes = AppConfig.class)
-//public class AppTest {
-//
-//    @Autowired
-//    private ApplicationContext applicationContext;
-//
-//    @Test
-//    public void mainTest() {
-//        HelloWorld tree =
-//                applicationContext.getBean(HelloWorld.class);
-//        HelloWorld leaf =
-//                applicationContext.getBean(HelloWorld.class);
-//
-//        Cat one = applicationContext.getBean(Cat.class);
-//        Cat two = applicationContext.getBean(Cat.class);
-//
-//        Assert.assertSame("Тест провален, не корректная настройка бина HelloWorld", tree, leaf);
-//        Assert.assertNotSame("Тест провален, не корректная настройка бина Cat", one, two);
-//    }
-//}
+import org.junit.Assert;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.ApplicationContext;
+import org.springframework.test.context.ContextConfiguration;
+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
+
+@RunWith(SpringJUnit4ClassRunner.class)
+@ContextConfiguration(classes = AppConfig.class)
+public class AppTest {
+
+   @Autowired
+    private ApplicationContext applicationContext;
+
+   @Test
+  public void mainTest() {
+       HelloWorld tree =
+                applicationContext.getBean(HelloWorld.class);
+       HelloWorld leaf =
+               applicationContext.getBean(HelloWorld.class);
+
+       Cat one = applicationContext.getBean(Cat.class);
+        Cat two = applicationContext.getBean(Cat.class);
+
+        Assert.assertSame("Тест провален, не корректная настройка бина HelloWorld", tree, leaf);
+        Assert.assertNotSame("Тест провален, не корректная настройка бина Cat", one, two);
+    }
+}
Index: src/main/java/Cat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Cat.java b/src/main/java/Cat.java
new file mode 100644
--- /dev/null	(date 1740909881510)
+++ b/src/main/java/Cat.java	(date 1740909881510)
@@ -0,0 +1,25 @@
+public class Cat {
+    private String name;
+
+    public Cat() {
+    }
+
+    public Cat(String name) {
+        this.name = name;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    @Override
+    public String toString() {
+        return "Cat{" +
+                "name='" + name + '\'' +
+                '}';
+    }
+}
